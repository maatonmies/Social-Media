@model SocialMedia.Models.ViewModels.Account.UserViewModel
@{
    Layout = null;
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Connected - Log In or Sign Up</title>
    <link href="https://cdn.rawgit.com/michalsnik/aos/2.1.1/dist/aos.css" rel="stylesheet">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>

    <div class="navbar navbar-default navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button class="navbar-toggle" type="button" data-toggle="collapse" data-target="#navbar-main">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="#">Connected</a>
            </div>

            <div class="navbar-collapse collapse" id="navbar-main">
                @using (Html.BeginForm("Login", "Account", FormMethod.Post, new {id = "loginForm", @class = "navbar-form navbar-right" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Username" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Password" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <button type="submit" class="btn btn-warning">Log In</button>

                    if (ViewBag.Message != null)
                    {
                        <p data-aos="zoom-in" data-aos-easing="ease-in-out-back" id="validationMessage">@ViewBag.Message</p>
                    }

                }
            </div>

        </div>
    </div>

    <div class="container body-content">
        <div class="row">
            <div class="col-sm-6">
                <div class="banner">
                    <img alt="Connected" class="img-responsive" src="~/Content/network.png" />
                </div>
            </div>

            <div class="col-sm-5 col-sm-offset-1">
                @using (Html.BeginForm("CreateAccount", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal create-account-form">
                        <h4>Create an account</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First name" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Surname" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", placeholder = "Email address" } })
                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Username" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                <label class="text-muted">Upload Profile Picture</label>
                                <input class="form-control" name="imgUpload" type="file" />
                            </div>

                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                <input type="submit" value="Sign Up" class="btn btn-warning" />
                            </div>
                        </div>

                    </div>
                }
            </div>
        </div>
        <hr />
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/ajax")
    <script src="https://cdn.rawgit.com/michalsnik/aos/2.1.1/dist/aos.js"></script>
    <script>
        $(function () {
            AOS.init();
        });
    </script>
</body>
</html>
